tape = [0] * 30000 # это наша "закольцованная" лента с данными
position = 0 # это позиция ленты
#program = input() # это раскомментируешь для сдачи результата
#program="+.>.+>+>+>+++>+++++<[-].>." # а это наоборот закомментируешь
#program="++[-.].1" # это простенькая программка,
                    # на которой легко проверить исполнение кода в трассировщике
#program = "+++++++++++++++++++++++++++>+++++++++++++++++++++++>+++>+++++++++++++++++++++++++++++++++++++++++++++++>--->------------>++++++++++++++++++++++++++++++++++++++++++++++++++++>+[<[-<]>[>]>[<-[>]<.>>]<<+]"
program = "++++[-.[-.].]"

# Так как нам нужно менять значение i внутри цикла,
# мы не можем использовать цикл for - он этого не позволяет (в Питоне так)
# Вместо этого используем цикл while и вручную увеличиваем i в конце цикла
# Этого вам точно не объясняли - считай, что нашёл ответ в интернете

i = 0
while (i < len(program)):
# этот кусок кода аналогичен задаче bf--
    if '+' in program[i]:
        tape[position] += 1
        if tape[position] == 256:
            tape[position] = 0
    elif '-' in program[i]:
        tape[position] -= 1
        if tape[position] == -1:
            tape[position] = 255
    elif '>' in program[i]:
        position += 1
        if position == 30000:
            position = 0
    elif '<' in program[i]:
        position -= 1
        if position == -1:
            position = 29999
    elif '.' in program[i]:
        print(tape[position])
# тут начинается новый код: мы встречаем левый брекет "["
    elif '[' in program[i]:
# смотрим значение tape[position]
# если оно = 0, то пропускаем все команды в квадратных скобках
# то есть просто мотаем программу вправо, пока не наткнёмся на правый брекет "]"
        if tape[position] == 0:
            while ']' not in program[i]:
                i += 1
# а если tape[position] не равно 0, то просто продолжаем выполнение программы
# и выполняем его, пока не наткнёмся на правый брекет "]"
# и вот когда его встретим, то будем проматывать программу назад до левого брекета "["
    elif ']' in program[i]:
        while '[' not in program[i]:
            i -= 1
        continue # эта команда пропускает последующее тело цикла
                 # (нам нужно пропустить команду i += 1)
    i += 1
