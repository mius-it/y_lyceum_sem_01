M = 3 # Количество множеств, как в примере 2

# Как ты знаешь, в списке могут храниться любые объекты:
# числа, строки, другие списки, а также и множества.
# Список множеств - это вполне нормальная вещь.
# И именно с его помощью эта задача решается общим (а не частным) способом.

list_of_sets = [] # здесь у нас будет список множеств. Пока просто создаём пустой список
set1 = {'Александрова','Борисов','Васильев','Иванов'} # задаём множество №1
set2 = {'Петров','Борисов','Васильев','Александрова'} # задаём множество №2
set3 = {'Иванов','Александрова','Петров','Борисов'} # задаём множество №3

list_of_sets.append(set1) # добавляем к списку множеств множество №1
list_of_sets.append(set2) # добавляем к списку множеств множество №2
list_of_sets.append(set3) # добавляем к списку множеств множество №3

print('\nСписок множеств:',list_of_sets)

intersect = {} # Здесь будет наш результат
intersect = list_of_sets[0] # Для начала закинем сюда первое множество

# А теперь будем в цикле искать пересечение множеств из списка
for i in range(1, M, 1): # Так как первое множество мы уже занесли поэтому i считаем не от нуля, а от 1
    intersect = intersect & list_of_sets[i]
print('Результат пересечения:', intersect)

# Решение с предопределёнными данными готово.
# Теперь твоя задача - переделать программу на ручной ввод данных.
# Тебе нужно М раз создавать множество из N элементов. Ты знаешь, как это делать.
# И каждый раз это множество нужно добавлять к нашему списку множеств.
# Почитай про функцию list.append(), она немного отличается от list.add()